<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html
	xmlns="http://www.w3.org/1999/xhtml"
	xml:lang="en" 
	lang="en" >
<head>
	<title>Galaxy Map | Eve Online</title>
	<meta name="description" content="3d galaxy viewer"/>
	<meta name="author"      content="rektide"/>
	<meta name="generator"   content="gvim7.1"/>
	<meta name="copyright"   content="2009(c)"/>

	<script src="jquery.js" type="text/javascript"></script>
	<script src="ui/ui.core.js" type="text/javascript"></script>
	<script src="ui/ui.draggable.js" type="text/javascript"></script>
	<!-- sylvester matrix library; http://sylvester.jcoglan.com -->
	<!-- uncompressed -->
	<script src="sylvester.src.js" type="text/javascript"></script>
	<!-- compressed -->
	<!-- <script src="sylvester.js" type="text/javascript"></script> -->



	<!-- default baseline stylesheet -->
	<link href="base.css" rel="stylesheet" type="text/css"></link>
</head>
<body resize="rh" >

<style>
.dialog { padding:.3em;left:500px;position:absolute;width:275px; }
.formInput { width:75px; font-size:10px; }
h2 { margin: 0 0 6px 0; }
</style>

<div
	id="gluLookAtDiv"
	class="dialog"
	style="background-color:#666699;top:45px;">
	<h2>gluLookAt</h2>
	e
	<input type="text" class="formInput" id="ex"/>,
	<input type="text" class="formInput" id="ey"/>,
	<input type="text" class="formInput" id="ez"/>,<br/>
	c
	<input type="text" class="formInput" id="cx"/>,
	<input type="text" class="formInput" id="cy"/>,
	<input type="text" class="formInput" id="cz"/>,<br/>
	u
	<input type="text" class="formInput" id="ux"/>,
	<input type="text" class="formInput" id="uy"/>,
	<input type="text" class="formInput" id="uz"/><br/>
	<input type="button" value="update" style="margin-top:6px;" onclick="refreshLookAt();" />
</div>

<div
	id="pipelineDiv"
	class="dialog"
	style="background-color:#669966;top:220px;">
	<h2>pipeline</h2>
	points<br/>
	<textarea rows="4" cols="31" wrap="off" id="pointsM" /><br/>
	view<br/>
	<textarea rows="4" cols="31" wrap="off" id="viewM" /><br/>
	perspective<br/>
	<textarea rows="4" cols="31" wrap="off" id="perspectiveM" /><br/>
	results<br/>
	<textarea rows="4" cols="31" wrap="off" id="resultsM" /><br/>
</div>


<!-- common style -->
<svg
	xmlns="http://www.w3.org/2000/svg"
	id="style"
	version="1.2"
	style="display:none;">
	<desc>common styles</desc>
	<defs>
		<linearGradient 
			id="gl01">
			<stop offset="0.2" stop-color="#39F"/>
			<stop offset="0.9" stop-color="#F3F"/>
		</linearGradient>
		<radialGradient 
			id="gr01"
			gradientUnits="userSpaceOnUse">
			<stop
				style="stop-color:#f72727;stop-opacity:1;"
				offset="0"/>
			<stop
				style="stop-color:#c8c8c8;stop-opacity:0.6"
				offset=".95"/>
			<stop
				style="stop-color:#ffffff;stop-opacity:1"
				offset=".9501"/>
		</radialGradient>
	</defs>
</svg>

<!-- background viewport -->
<svg 
	xmlns="http://www.w3.org/2000/svg"
	id="view1"
	width="600"
	height="600"
	version="1.2"
	viewBox="-1, -1, 2, 2">


	<circle id="p" cx=".8" cy=".8" r=".004" fill="green" />

	<rect x="-1" width="2" y="-1" height="2" stroke="blue" stroke-width=".006" fill="none" />

</svg>


<script type="text/javascript" src="base.js"/>
<script type="text/javascript" src="engine.js"/>
<script type="text/javascript" src="sceneG.js"/>
<script type="text/javascript" src="data.js"/>
<script type="text/javascript" src="event.js"/>
<script type="text/javascript">
// <![CDATA[

var canvas = document.getElementById("view1");
window.onresize = resizeHandler(canvas);
//window.onresize({target:window});

$("#gluLookAtDiv").draggable();
$("#pipelineDiv").draggable();

buildDocumentRepresentation("gluLookAtDiv", "cx", "cy", "cz", "ex", "ey", "ez", "ux", "uy", "uz");
buildDocumentRepresentation("pipelineDiv", "pointsM", "viewM", "perspectiveM", "resultsM");

function refreshLookAt()
{
	if(window.gluLookAtDiv)
	{
		var view = gluLookFrom( 
			gluLookAtDiv.ex.value * 1.0, gluLookAtDiv.ey.value * 1.0, gluLookAtDiv.ez.value * 1.0,
			gluLookAtDiv.cx.value * 1.0, gluLookAtDiv.cy.value * 1.0, gluLookAtDiv.cz.value * 1.0,
			gluLookAtDiv.ux.value * 1.0, gluLookAtDiv.uy.value * 1.0, gluLookAtDiv.uz.value * 1.0);

		mainCamera.view = view;
		root.render(mainCamera,viewport)
	}
			
}



// setup client viewport

console.log("pipeline setup: look at");
var s = 1;
var d = [-10000, -10000, 1400000000000];
var view= gluLookFrom( d[0], d[1], d[2],
                       rit[s][4], rit[s][5], rit[s][6] );


console.log("pipeline setup: perspective");
var m = .25;
var n = .25;
var f = 4;
var perspective= glFrustum(-m,m,-m,m,n,f);
//var t_viewing = perspective.x(view);

console.log("pipeline setup: camera");
var mainCamera = new camera(view,perspective);

// setup nodes
console.log("pipeline setup: constellation root");
root = constellationNode(rit,renderer);


// render

var viewport = document.getElementById("view1");
//var scene = universe.render(cam,canvas)

console.log("render");
root.render(mainCamera,viewport);

// ]]>
</script>

</body>
</html>
